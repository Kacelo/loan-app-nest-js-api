import { PrismaService } from 'src/prisma.service';
import { CreateLoanDto } from './dto/createLoanDto';
import { UpdateLoanDto } from './dto/updateLoanDto';
export declare class LoanService {
    private prisma;
    constructor(prisma: PrismaService);
    createLoan(createLoanDto: CreateLoanDto): Promise<{
        id: string;
        loanerId: string;
        loaneeId: string;
        amount: string;
        interestRate: string;
        duration: number;
        startDate: Date;
        endDate: Date;
        status: string;
        collateral: string;
        repaymentSchedule: string;
        latePaymentPenalty: number;
        comments: string;
        createdAt: Date;
        updatedAt: Date;
        deleted: boolean;
    }>;
    updateLoan(id: string, updateLoanDto: UpdateLoanDto): Promise<{
        id: string;
        loanerId: string;
        loaneeId: string;
        amount: string;
        interestRate: string;
        duration: number;
        startDate: Date;
        endDate: Date;
        status: string;
        collateral: string;
        repaymentSchedule: string;
        latePaymentPenalty: number;
        comments: string;
        createdAt: Date;
        updatedAt: Date;
        deleted: boolean;
    }>;
    deleteLoan(id: string, deleted: boolean): Promise<{
        id: string;
        loanerId: string;
        loaneeId: string;
        amount: string;
        interestRate: string;
        duration: number;
        startDate: Date;
        endDate: Date;
        status: string;
        collateral: string;
        repaymentSchedule: string;
        latePaymentPenalty: number;
        comments: string;
        createdAt: Date;
        updatedAt: Date;
        deleted: boolean;
    }>;
    getAllLoans(): Promise<{
        id: string;
        loanerId: string;
        loaneeId: string;
        amount: string;
        interestRate: string;
        duration: number;
        startDate: Date;
        endDate: Date;
        status: string;
        collateral: string;
        repaymentSchedule: string;
        latePaymentPenalty: number;
        comments: string;
        createdAt: Date;
        updatedAt: Date;
        deleted: boolean;
    }[]>;
}
